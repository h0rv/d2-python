name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:
jobs:
  lint-and-test:
    name: Lint and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      - name: Lint with ruff
        run: |
          uv run ruff check ./src
      - name: Format check with ruff
        run: |
          uv run ruff format ./src --check
      - name: Type check with mypy
        run: |
          uv run mypy ./src
      - name: Run tests
        run: |
          uv run pytest -s

  release:
    name: Release
    env:
      DIST_ARCHIVE_NAME: ${{ github.event.repository.name }}-dist
    runs-on: ${{ matrix.os }}
    needs: [lint-and-test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        python-version: ['3.10']
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: '.github/config/changelog_configuration.json'
          ignorePreReleases: 'false'
      - name: Package release
        uses: papeloto/action-zip@v1
        with:
          files: ./
          recursive: false
          dest: ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          files: |
            ${{ env.DIST_ARCHIVE_NAME }}-${{ steps.get_version.outputs.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      - name: Build and publish
        shell: bash
        run: |
          uv build
          uv publish --token ${{ secrets.PYPI_TOKEN }}
